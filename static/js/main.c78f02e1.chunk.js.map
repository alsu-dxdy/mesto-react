{"version":3,"sources":["images/logo.svg","components/Header.js","utils/API.js","config.js","components/Main.js","images/close.svg","components/PopupWithForm.js","components/ImagePopup.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","api","options","this","res","ok","json","Promise","reject","status","fetch","baseUrl","method","headers","authorization","then","_getResponseData","name","job","body","JSON","stringify","about","url","link","cardId","avatar","Main","props","React","useState","userName","setUserName","userDescription","setuserDescription","userAvatar","setuserAvatar","useEffect","getUserInfo","userData","catch","err","alert","message","style","backgroundImage","onClick","onEditAvatar","onEditProfile","onAddPlace","PopupWithForm","isOpen","onClose","close","title","children","ImagePopup","Footer","App","isEditProfilePopupOpen","setisEditProfilePopupOpen","isAddPlacePopupOpen","setisAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","closeAllPopups","required","type","placeholder","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c78f02e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fad4f8a5.svg\";","import headerLogo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header root__section\">\r\n            <img\r\n                src={headerLogo}\r\n                alt=\"mesto logo\"\r\n                className=\"logo\"\r\n            />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { serverUrl } from '../config';\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.options = options;\r\n  }\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  }\r\n\r\n  getInitialCards() {\r\n    return (\r\n      fetch(this.options.baseUrl + `/cards`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          authorization: this.options.headers.authorization\r\n        }\r\n      })\r\n        .then(res => this._getResponseData(res))\r\n    );\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(this.options.baseUrl + `/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  sendServerUserInfo(name, job) {\r\n    return fetch(this.options.baseUrl + `/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: job\r\n      })\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  addCard(name, url) {\r\n    return fetch(this.options.baseUrl + `/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: url\r\n      })\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(this.options.baseUrl + `/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  addLike(cardId) {\r\n    return fetch(this.options.baseUrl + `/cards/like/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  removeLike(cardId) {\r\n    return fetch(this.options.baseUrl + `/cards/like/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  sendServerAvatar(url) {\r\n    return fetch(this.options.baseUrl + `/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: url\r\n      })\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: `${serverUrl}`,\r\n  headers: {\r\n    authorization: \"24efeac8-6c91-4328-9f60-c8c7ed524d9c\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\nexport {\r\n  api\r\n};\r\n","export const serverUrl = 'http://nomoreparties.co/cohort8';\r\n","import React from 'react';\r\nimport {\r\n    api\r\n} from '../utils/API';\r\n\r\nfunction Main(props) {\r\n\r\n    const [userName, setUserName] = React.useState('');\r\n    const [userDescription, setuserDescription] = React.useState('');\r\n    const [userAvatar, setuserAvatar] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        api\r\n            .getUserInfo()\r\n            .then(userData => {\r\n                setUserName(userData.name);\r\n                setuserDescription(userData.about);\r\n                setuserAvatar(userData.avatar);\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n    });\r\n\r\n    /* Значение можно задать сразу (без промежуточной переменной). \r\n     Для этого используются двойные фигурные скобки {{...}}: \r\n     внешние означают подстановку значения, \r\n     а внутренние относятся к объекту, описывающему набор стилей */\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile root__section\">\r\n                <div className=\"user-info\">\r\n                    <div className=\"user-info__photo\" style={{ backgroundImage: `url(${userAvatar})` }} onClick={props.onEditAvatar}></div>\r\n                    <div className=\"user-info__data\">\r\n                        <h1 className=\"user-info__name\">{userName}</h1>\r\n                        <p className=\"user-info__job\">{userDescription}</p>\r\n                    </div>\r\n                    <button className=\"button_edit_profile\" onClick={props.onEditProfile}>Edit</button>\r\n                    <button className=\"button user-info__button\" onClick={props.onAddPlace}>+</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"places-list root__section\"></div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","export default __webpack_public_path__ + \"static/media/close.8a65f75d.svg\";","import close from '../images/close.svg';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_is-opened'} `} >\r\n            <div className=\"popup__content\">\r\n                <img onClick={props.onClose}\r\n                    src={close}\r\n                    alt=\"\"\r\n                    className=\"popup__close\"\r\n                />\r\n                <h3 className=\"popup__title\">{props.title}</h3>\r\n                {props.children}\r\n            </div>\r\n        </ div>\r\n\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import close from '../images/close.svg';\r\n\r\nfunction ImagePopup() {\r\n    return (\r\n        <div className=\"popup popup_image\">\r\n            <div className=\"popup_image_container\">\r\n                <img src=\"#\" alt=\"\" className=\"popup_image_big\" />\r\n                <img\r\n                    src={close}\r\n                    alt=\"\"\r\n                    className=\"popup__close\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","function Footer() {\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Footer from './Footer';\n\nimport '../index.css';\n\nfunction App() {\n  // Хук, управляющий внутренним состоянием.\n  const [isEditProfilePopupOpen, setisEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = React.useState(false);\n\n  function handleEditProfileClick() {\n    setisEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setisAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleEditAvatarClick() {\n    setisEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function closeAllPopups() {\n    setisEditProfilePopupOpen(false);\n    setisAddPlacePopupOpen(false);\n    setisEditAvatarPopupOpen(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"root\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick} />\n\n          /* popup Новое место */\n            <PopupWithForm\n          title=\"Новое место\"\n          name=\"add-place\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          children={\n            <form className=\"popup__form\" name=\"new_place\">\n              <div className=\"input-container\">\n                <input\n                  required\n                  type=\"text\"\n                  name=\"name\"\n                  className=\"popup__input popup__input_type_name\"\n                  placeholder=\"Название\"\n                  minLength=\"2\"\n                  maxLength=\"30\"\n                />\n                <span className=\"input__error\"></span>\n              </div>\n              <div className=\"input-container\">\n                <input\n                  required\n                  type=\"url\"\n                  name=\"link\"\n                  className=\"popup__input popup__input_type_link-url\"\n                  placeholder=\"Ссылка на картинку\"\n                />\n                <span className=\"input__error\"></span>\n              </div>\n              <button className=\"button popup__button button_disabled\">+</button>\n            </form>\n          } />\n\n          /* popup Редактировать профиль */\n            <PopupWithForm\n          title=\"Редактировать профиль\"\n          name=\"edit-profile\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          children={<form className=\"popup__form popup__form_edit\" name=\"new_edit\">\n            <div className=\"input-container\">\n              <input\n                required\n                type=\"text\"\n                name=\"username\"\n                className=\"popup__input popup__input_type_name\"\n                placeholder=\"Имя\"\n                minLength=\"2\"\n                maxLength=\"30\"\n              />\n              <span className=\"input__error\"></span>\n            </div>\n            <div className=\"input-container\">\n              <input\n                required\n                type=\"text\"\n                name=\"job\"\n                className=\"popup__input popup__input_type_job\"\n                placeholder=\"О себе\"\n                minLength=\"2\"\n                maxLength=\"30\"\n              />\n              <span className=\"input__error\"></span>\n            </div>\n            <button\n              type\n              className=\"button popup__button_save popup__button_save_new_info\"\n            >\n              Сохранить\n                </button>\n          </form>} />\n\n\n          /* popup Обновить аватар */\n            <PopupWithForm\n          title=\"Обновить аватар\"\n          name=\"avatar\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          children={\n            <form className=\"popup__form popup__form_avatar\" name=\"new_avatar\">\n              <div className=\"input-container\">\n                <input\n                  required\n                  type=\"url\"\n                  name=\"avatar\"\n                  className=\"popup__input popup__input_type_link-url\"\n                  placeholder=\"Ссылка на аватар\"\n                />\n                <span className=\"input__error\"></span>\n              </div>\n              <button type className=\"button popup__button_save_new_info\">\n                Сохранить\n            </button>\n            </form>\n          } />\n\n          /* popup Открытие попапа с картинкой */\n            <ImagePopup />\n        <Footer />\n      </div>\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}