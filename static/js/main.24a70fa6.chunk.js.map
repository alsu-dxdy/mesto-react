{"version":3,"sources":["images/logo.svg","components/Header.js","components/Card.js","components/Main.js","images/close.svg","components/PopupWithForm.js","components/ImagePopup.js","components/AddPlacePopup.js","components/Footer.js","utils/API.js","config.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","Card","props","card","onCardClick","btnClassName","onClick","style","backgroundImage","link","name","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","userAvatar","userName","userDescription","map","item","_id","PopupWithForm","closePopupFormClickOutContent","isOpen","onClose","close","title","children","ImagePopup","closeImagePopupClickOutContent","AddPlacePopup","inputNameRef","React","useRef","inputLinkRef","required","type","placeholder","minLength","maxLength","ref","e","preventDefault","onAddPlaceSubmit","current","value","Footer","api","options","this","res","ok","json","Promise","reject","status","fetch","baseUrl","method","headers","authorization","then","_getResponseData","job","body","JSON","stringify","about","url","cardId","avatar","App","useState","isEditProfilePopupOpen","setisEditProfilePopupOpen","isAddPlacePopupOpen","setisAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","setUserName","setuserDescription","setuserAvatar","setCards","isImageOpen","selectedCard","setSelectedCard","closeAllPopups","useEffect","all","getUserInfo","getInitialCards","userData","myCards","filter","owner","catch","err","console","log","data","addCard","newCardData","target","closest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,MAA0B,iCCc1BA,MAZf,WACI,OACI,wBAAQC,UAAU,uBAAlB,SACI,qBACIC,IAAKC,EACLC,IAAI,aACJH,UAAU,YCiBXI,MAzBf,SAAcC,GAAQ,IACVC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YAERC,EAAY,gCAAsE,IAMxF,OACI,sBAAKR,UAAU,aAAf,UACI,qBAAKA,UAAU,oBAAoBS,QAN3C,WACIF,EAAYD,IAKiDI,MAAO,CAAEC,gBAAgB,OAAD,OAASL,EAAKM,KAAd,MAAjF,SACI,wBAAQZ,UAAU,8BAEtB,sBAAKA,UAAU,0BAAf,UACI,oBAAIA,UAAU,mBAAd,SAAkCM,EAAKO,OACvC,sBAAKb,UAAU,8BAAf,UACI,wBAAQA,UAAWQ,IACnB,mBAAGR,UAAU,oBAAb,SAAkCM,EAAKQ,MAAMC,mBCiBlDC,MAhCf,SAAcX,GAAQ,IAEdY,EAGAZ,EAHAY,aAAcC,EAGdb,EAHca,cAAeC,EAG7Bd,EAH6Bc,WAC7BZ,EAEAF,EAFAE,YAAaa,EAEbf,EAFae,MACbC,EACAhB,EADAgB,WAAYC,EACZjB,EADYiB,SAAUC,EACtBlB,EADsBkB,gBAG1B,OACI,qCACI,qBAAKvB,UAAU,wBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAmBU,MAAO,CAAEC,gBAAgB,OAAD,OAASU,EAAT,MAA0BZ,QAASQ,IAC7F,sBAAKjB,UAAU,kBAAf,UACI,oBAAIA,UAAU,kBAAd,SAAiCsB,IACjC,mBAAGtB,UAAU,iBAAb,SAA+BuB,OAEnC,wBAAQvB,UAAU,sBAAsBS,QAASS,EAAjD,kBACA,wBAAQlB,UAAU,2BAA2BS,QAASU,EAAtD,oBAIR,qBAAKnB,UAAU,4BAAf,SAEQoB,EAAMI,KAAI,SAAAC,GAAI,OACV,cAAC,EAAD,CAAqBnB,KAAMmB,EAAMlB,YAAaA,GAAnCkB,EAAKC,cC3BzB,MAA0B,kCCoB1BC,MAlBf,SAAuBtB,GAEnB,OACI,qBAAKI,QAASJ,EAAMuB,8BAA+B5B,UAAS,2BAAsBK,EAAMQ,KAA5B,YAAoCR,EAAMwB,QAAU,kBAApD,KAA5D,SACI,sBAAK7B,UAAU,iBAAf,UACI,qBAAKS,QAASJ,EAAMyB,QAChB7B,IAAK8B,EACL5B,IAAI,6CACJH,UAAU,iBAEd,oBAAIA,UAAU,eAAd,SAA8BK,EAAM2B,QACnC3B,EAAM4B,eCORC,MAlBf,SAAoB7B,GAAQ,IAChBwB,EAAgExB,EAAhEwB,OAAQC,EAAwDzB,EAAxDyB,QAASlB,EAA+CP,EAA/CO,KAAMC,EAAyCR,EAAzCQ,KAAMsB,EAAmC9B,EAAnC8B,+BAErC,OACI,qBAAK1B,QAAS0B,EAAgCnC,UAAS,4BAAuB6B,GAAU,kBAAjC,KAAvD,SACI,sBAAK7B,UAAU,wBAAf,UACI,qBAAKC,IAAKW,EAAMT,IAAKU,EAAMb,UAAU,oBACrC,qBACIS,QAASqB,EACT7B,IAAK8B,EACL5B,IAAI,GACJH,UAAU,uBC2CfoC,MArDf,SAAuB/B,GACnB,IAAMgC,EAAeC,IAAMC,SACrBC,EAAeF,IAAMC,SAW3B,OAEI,aADA,CACC,EAAD,CACIP,MAAM,gEACNnB,KAAK,YAELgB,OAAQxB,EAAMwB,OACdC,QAASzB,EAAMyB,QACfF,8BAA+BvB,EAAMuB,8BACrCK,SACI,uBAAMjC,UAAU,cAAca,KAAK,YAAnC,UACI,sBAAKb,UAAU,kBAAf,UACI,uBACIyC,UAAQ,EACRC,KAAK,OACL7B,KAAK,OACLb,UAAU,sCACV2C,YAAY,mDACZC,UAAU,IACVC,UAAU,KACVC,IAAKT,IAET,sBAAMrC,UAAU,oBAEpB,sBAAKA,UAAU,kBAAf,UACI,uBACIyC,UAAQ,EACRC,KAAK,MACL7B,KAAK,OACLb,UAAU,0CACV2C,YAAY,qGACZG,IAAKN,IAET,sBAAMxC,UAAU,oBAEpB,wBAAQA,UAAU,uCAAuCS,QA5CzE,SAA8BsC,GAC1BA,EAAEC,iBACF3C,EAAM4C,iBAAiB,CACnBpC,KAAMwB,EAAaa,QAAQC,MAC3BvC,KAAM4B,EAAaU,QAAQC,QAE/Bd,EAAaa,QAAQC,MAAQ,GAC7BX,EAAaU,QAAQC,MAAQ,IAqCjB,qBC7CLC,MANf,WACI,OACI,yB,cCsGFC,EAAM,I,WArGV,WAAYC,GAAU,oBACpBC,KAAKD,QAAUA,E,6DAEAE,GACf,OAAIA,EAAIC,GACCD,EAAIE,OAEJC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,wCAItB,IAAD,OAChB,OACEC,MAAMP,KAAKD,QAAQS,QAAb,SAAiC,CACrCC,OAAQ,MACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,iBAGrCC,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,Q,oCAI1B,IAAD,OACZ,OAAOM,MAAMP,KAAKD,QAAQS,QAAb,YAAoC,CAC/CC,OAAQ,MACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,iBAErCC,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,Q,yCAGpB3C,EAAMwD,GAAM,IAAD,OAC5B,OAAOP,MAAMP,KAAKD,QAAQS,QAAb,YAAoC,CAC/CC,OAAQ,QACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,cACpC,eAAgB,oBAElBI,KAAMC,KAAKC,UAAU,CACnB3D,KAAMA,EACN4D,MAAOJ,MAERF,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,Q,8BAG/B3C,EAAM6D,GAAM,IAAD,OACjB,OAAOZ,MAAMP,KAAKD,QAAQS,QAAb,SAAiC,CAC5CC,OAAQ,OACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,cACpC,eAAgB,oBAElBI,KAAMC,KAAKC,UAAU,CACnB3D,KAAMA,EACND,KAAM8D,MAEPP,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,Q,iCAG5BmB,GAAS,IAAD,OACjB,OAAOb,MAAMP,KAAKD,QAAQS,QAAb,iBAAiCY,GAAU,CACtDX,OAAQ,SACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,iBAErCC,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,Q,8BAG/BmB,GAAS,IAAD,OACd,OAAOb,MAAMP,KAAKD,QAAQS,QAAb,sBAAsCY,GAAU,CAC3DX,OAAQ,MACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,iBAErCC,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,Q,iCAG5BmB,GAAS,IAAD,OACjB,OAAOb,MAAMP,KAAKD,QAAQS,QAAb,sBAAsCY,GAAU,CAC3DX,OAAQ,SACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,iBAErCC,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,Q,uCAGtBkB,GAAM,IAAD,OACpB,OAAOZ,MAAMP,KAAKD,QAAQS,QAAb,mBAA2C,CACtDC,OAAQ,QACRC,QAAS,CACPC,cAAeX,KAAKD,QAAQW,QAAQC,cACpC,eAAgB,oBAElBI,KAAMC,KAAKC,UAAU,CACnBI,OAAQF,MAETP,MAAK,SAAAX,GAAG,OAAI,EAAKY,iBAAiBZ,U,KAI7B,CAAQ,CAClBO,QAAQ,GAAD,OCzGgB,oCD0GvBE,QAAS,CACPC,cAAe,uCACf,eAAgB,sBEwFLW,MAvLf,WAAe,MAE+CC,oBAAS,GAFxD,mBAENC,EAFM,KAEkBC,EAFlB,OAGyCF,oBAAS,GAHlD,mBAGNG,EAHM,KAGeC,EAHf,OAI6CJ,oBAAS,GAJtD,mBAINK,EAJM,KAIiBC,EAJjB,OAMmBN,mBAAS,IAN5B,mBAMNxD,EANM,KAMI+D,EANJ,OAOiCP,mBAAS,IAP1C,mBAONvD,EAPM,KAOW+D,EAPX,OAQuBR,mBAAS,IARhC,mBAQNzD,EARM,KAQMkE,EARN,OASaT,mBAAS,IATtB,mBASN1D,EATM,KASCoE,EATD,OAW2BV,mBAAS,CAC/CW,aAAa,EACb7E,KAAM,GACNC,KAAM,KAdK,mBAWN6E,EAXM,KAWQC,EAXR,KAmDb,SAASC,IACPZ,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBO,EAAgB,CACdF,aAAa,EACb7E,KAAM,GACNC,KAAM,KA8BV,OAvEAyB,IAAMuD,WAAU,WAEdlC,QAAQmC,IAAI,CAACzC,EAAI0C,cAAe1C,EAAI2C,oBAAoB7B,MACtD,YAA+B,IAAD,mBAA5B8B,EAA4B,KACtBC,EADsB,KACCC,QAAO,SAAA1E,GAAI,OAAIA,EAAK2E,MAAM1E,MAAQuE,EAASvE,OACxE2D,EAAYY,EAASpF,MACrByE,EAAmBW,EAASxB,OAC5Bc,EAAcU,EAASrB,QACvBY,EAASU,MAGVG,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IA0DD,sBAAKtG,UAAU,OAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,CACEkB,cA3DN,WACE8D,GAA2BD,IA2DvB5D,WAxDN,WACE+D,GAAwBD,IAwDpBhE,aArDN,WACEmE,GAA0BD,IAqDtB/D,MAAOA,EACPb,YAnDN,SAAyBD,GAAO,IACtBM,EAAeN,EAAfM,KAAMC,EAASP,EAATO,KACd8E,EAAgB,CAAEF,aAAa,EAAM7E,KAAMA,EAAMC,KAAMA,KAkDnDS,SAAUA,EACVC,gBAAiBA,EACjBF,WAAYA,IAGd,cAAC,EAAD,CAAeQ,OAAQoD,EAAqBnD,QAAS8D,EACnD3C,iBA3BN,SAA2BwD,GACzBpD,EAAIqD,QAAQD,EAAK5F,KAAM4F,EAAK7F,MACzBuD,MAAK,SAACwC,GACLnB,EAAS,GAAD,mBAAKpE,GAAL,CAAYuF,KACpBf,OAEDS,OAAM,SAACC,GACNC,QAAQC,IAAR,gDAAuBF,QAoBc1E,8BAzC3C,SAAuCmB,GACM,MAAvCA,EAAE6D,OAAOC,QAAQ,oBACnBjB,OA0CA,cAAC,EAAD,CACE5D,MAAM,4HACNnB,KAAK,eACLgB,OAAQkD,EACRjD,QAAS8D,EACT3D,SAAU,uBAAMjC,UAAU,+BAA+Ba,KAAK,WAApD,UACR,sBAAKb,UAAU,kBAAf,UACE,uBACEyC,UAAQ,EACRC,KAAK,OACL7B,KAAK,WACLb,UAAU,sCACV2C,YAAY,qBACZC,UAAU,IACVC,UAAU,OAEZ,sBAAM7C,UAAU,oBAElB,sBAAKA,UAAU,kBAAf,UACE,uBACEyC,UAAQ,EACRC,KAAK,OACL7B,KAAK,MACLb,UAAU,qCACV2C,YAAY,kCACZC,UAAU,IACVC,UAAU,OAEZ,sBAAM7C,UAAU,oBAElB,wBACEA,UAAU,wDADZ,yEASJ,cAAC,EAAD,CACEgC,MAAM,wFACNnB,KAAK,SACLgB,OAAQsD,EACRrD,QAAS8D,EACT3D,SACE,uBAAMjC,UAAU,iCAAiCa,KAAK,aAAtD,UACE,sBAAKb,UAAU,kBAAf,UACE,uBACEyC,UAAQ,EACRC,KAAK,MACL7B,KAAK,SACLb,UAAU,0CACV2C,YAAY,2FAEd,sBAAM3C,UAAU,oBAElB,wBAAQA,UAAU,qCAAlB,yEAON,cAAC,EAAD,CACEa,KAAM6E,EAAa7E,KACnBD,KAAM8E,EAAa9E,KACnBkB,QAAS8D,EACT/D,OAAQ6D,EAAaD,YACrBtD,+BAzGN,SAAwCY,GACY,MAA9CA,EAAE6D,OAAOC,QAAQ,2BACnBjB,OAyGA,cAAC,EAAD,QClLSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.24a70fa6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fad4f8a5.svg\";","import headerLogo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header root__section\">\r\n            <img\r\n                src={headerLogo}\r\n                alt=\"mesto logo\"\r\n                className=\"logo\"\r\n            />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","function Card(props) {\r\n    const { card, onCardClick } = props;\r\n    const isLiked = false;\r\n    const btnClassName = `place-card__like-icon ${isLiked ? 'place-card__like-icon_liked' : ''}`;\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"place-card\">\r\n            <div className=\"place-card__image\" onClick={handleClick} style={{ backgroundImage: `url(${card.link})` }}>\r\n                <button className=\"place-card__delete-icon\"></button>\r\n            </div>\r\n            <div className=\"place-card__description\">\r\n                <h3 className=\"place-card__name\">{card.name}</h3>\r\n                <div className=\"place-card__right-container\">\r\n                    <button className={btnClassName} />\r\n                    <p className=\"place-card__count\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n    const {\r\n        onEditAvatar, onEditProfile, onAddPlace,\r\n        onCardClick, cards,\r\n        userAvatar, userName, userDescription,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile root__section\">\r\n                <div className=\"user-info\">\r\n                    <div className=\"user-info__photo\" style={{ backgroundImage: `url(${userAvatar})` }} onClick={onEditAvatar}></div>\r\n                    <div className=\"user-info__data\">\r\n                        <h1 className=\"user-info__name\">{userName}</h1>\r\n                        <p className=\"user-info__job\">{userDescription}</p>\r\n                    </div>\r\n                    <button className=\"button_edit_profile\" onClick={onEditProfile}>Edit</button>\r\n                    <button className=\"button user-info__button\" onClick={onAddPlace}>+</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"places-list root__section\">\r\n                {\r\n                    cards.map(item =>\r\n                        <Card key={item._id} card={item} onCardClick={onCardClick} />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","export default __webpack_public_path__ + \"static/media/close.8a65f75d.svg\";","import close from '../images/close.svg';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    return (\r\n        <div onClick={props.closePopupFormClickOutContent} className={`popup popup_type_${props.name} ${props.isOpen && 'popup_is-opened'} `} >\r\n            <div className=\"popup__content\">\r\n                <img onClick={props.onClose}\r\n                    src={close}\r\n                    alt=\"Закрыть\"\r\n                    className=\"popup__close\"\r\n                />\r\n                <h3 className=\"popup__title\">{props.title}</h3>\r\n                {props.children}\r\n            </div>\r\n        </ div>\r\n\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import close from '../images/close.svg';\r\n\r\nfunction ImagePopup(props) {\r\n    const { isOpen, onClose, link, name, closeImagePopupClickOutContent } = props;\r\n\r\n    return (\r\n        <div onClick={closeImagePopupClickOutContent} className={`popup popup_image ${isOpen && 'popup_is-opened'} `} >\r\n            <div className=\"popup_image_container\">\r\n                <img src={link} alt={name} className=\"popup_image_big\" />\r\n                <img\r\n                    onClick={onClose}\r\n                    src={close}\r\n                    alt=\"\"\r\n                    className=\"popup__close\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const inputNameRef = React.useRef();\r\n    const inputLinkRef = React.useRef();\r\n\r\n    function handleAddPlaceSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddPlaceSubmit({\r\n            name: inputNameRef.current.value,\r\n            link: inputLinkRef.current.value\r\n        });\r\n        inputNameRef.current.value = '';\r\n        inputLinkRef.current.value = '';\r\n    }\r\n    return (\r\n        /* popup Новое место */\r\n        <PopupWithForm\r\n            title=\"Новое место\"\r\n            name=\"add-place\"\r\n            // onSubmit={handleAddPlaceSubmit}\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            closePopupFormClickOutContent={props.closePopupFormClickOutContent}\r\n            children={\r\n                <form className=\"popup__form\" name=\"new_place\">\r\n                    <div className=\"input-container\">\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            className=\"popup__input popup__input_type_name\"\r\n                            placeholder=\"Название\"\r\n                            minLength=\"2\"\r\n                            maxLength=\"30\"\r\n                            ref={inputNameRef}\r\n                        />\r\n                        <span className=\"input__error\"></span>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <input\r\n                            required\r\n                            type=\"url\"\r\n                            name=\"link\"\r\n                            className=\"popup__input popup__input_type_link-url\"\r\n                            placeholder=\"Ссылка на картинку\"\r\n                            ref={inputLinkRef}\r\n                        />\r\n                        <span className=\"input__error\"></span>\r\n                    </div>\r\n                    <button className=\"button popup__button button_disabled\" onClick={handleAddPlaceSubmit}>+</button>\r\n                </form>\r\n            } />\r\n    );\r\n}\r\nexport default AddPlacePopup;","function Footer() {\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { serverUrl } from '../config';\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.options = options;\r\n  }\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  }\r\n\r\n  getInitialCards() {\r\n    return (\r\n      fetch(this.options.baseUrl + `/cards`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          authorization: this.options.headers.authorization\r\n        }\r\n      })\r\n        .then(res => this._getResponseData(res))\r\n    );\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(this.options.baseUrl + `/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  sendServerUserInfo(name, job) {\r\n    return fetch(this.options.baseUrl + `/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: job\r\n      })\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  addCard(name, url) {\r\n    return fetch(this.options.baseUrl + `/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: url\r\n      })\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(this.options.baseUrl + `/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  addLike(cardId) {\r\n    return fetch(this.options.baseUrl + `/cards/like/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  removeLike(cardId) {\r\n    return fetch(this.options.baseUrl + `/cards/like/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization\r\n      }\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n\r\n  sendServerAvatar(url) {\r\n    return fetch(this.options.baseUrl + `/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this.options.headers.authorization,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: url\r\n      })\r\n    }).then(res => this._getResponseData(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: `${serverUrl}`,\r\n  headers: {\r\n    authorization: \"24efeac8-6c91-4328-9f60-c8c7ed524d9c\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\nexport {\r\n  api\r\n};\r\n","export const serverUrl = 'https://nomoreparties.co/cohort8';\r\n","import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Footer from './Footer';\r\nimport {\r\n  api\r\n} from '../utils/API';\r\n\r\nimport '../index.css';\r\n\r\nfunction App() {\r\n  // Хук, управляющий внутренним состоянием.\r\n  const [isEditProfilePopupOpen, setisEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = useState(false);\r\n\r\n  const [userName, setUserName] = useState('');\r\n  const [userDescription, setuserDescription] = useState('');\r\n  const [userAvatar, setuserAvatar] = useState('');\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isImageOpen: false,\r\n    link: '',\r\n    name: '',\r\n  });\r\n\r\n  React.useEffect(() => {\r\n\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(\r\n      ([userData, initialCards]) => {\r\n        const myCards = initialCards.filter(item => item.owner._id === userData._id);\r\n        setUserName(userData.name);\r\n        setuserDescription(userData.about);\r\n        setuserAvatar(userData.avatar);\r\n        setCards(myCards);\r\n      }\r\n    )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  /*Открытие попапов*/\r\n  function handleEditProfileClick() {\r\n    setisEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setisAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setisEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\r\n  }\r\n  /*Закрытие попапов*/\r\n  function closeAllPopups() {\r\n    setisEditProfilePopupOpen(false);\r\n    setisAddPlacePopupOpen(false);\r\n    setisEditAvatarPopupOpen(false);\r\n    setSelectedCard({\r\n      isImageOpen: false,\r\n      link: '',\r\n      name: '',\r\n    });\r\n  }\r\n\r\n  // Закрытие попапа с формой: клик вне контента\r\n  function closePopupFormClickOutContent(e) {\r\n    if (e.target.closest('.popup__content') == null) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  // Закрытие попапа с I magepopup: клик вне контента\r\n  function closeImagePopupClickOutContent(e) {\r\n    if (e.target.closest('.popup_image_container') == null) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  /*Запрос на добавление новой карточки*/\r\n  function handleAddPlaceApi(data) {\r\n    api.addCard(data.name, data.link)\r\n      .then((newCardData) => {\r\n        setCards([...cards, newCardData]);\r\n        closeAllPopups()\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка: ${err}`);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Header />\r\n      {/*к названиям onEditProfile...onEditAvatar добавить слово Popup */}\r\n      <Main\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        cards={cards}\r\n        onCardClick={handleCardClick}\r\n        userName={userName}\r\n        userDescription={userDescription}\r\n        userAvatar={userAvatar}\r\n      />\r\n\r\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\r\n        onAddPlaceSubmit={handleAddPlaceApi} closePopupFormClickOutContent={closePopupFormClickOutContent} />\r\n\r\n      {/* popup Редактировать профиль */}\r\n      <PopupWithForm\r\n        title=\"Редактировать профиль\"\r\n        name=\"edit-profile\"\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n        children={<form className=\"popup__form popup__form_edit\" name=\"new_edit\">\r\n          <div className=\"input-container\">\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              name=\"username\"\r\n              className=\"popup__input popup__input_type_name\"\r\n              placeholder=\"Имя\"\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n            />\r\n            <span className=\"input__error\"></span>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              name=\"job\"\r\n              className=\"popup__input popup__input_type_job\"\r\n              placeholder=\"О себе\"\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n            />\r\n            <span className=\"input__error\"></span>\r\n          </div>\r\n          <button\r\n            className=\"button popup__button_save popup__button_save_new_info\"\r\n          >\r\n            Сохранить\r\n                </button>\r\n        </form>} />\r\n\r\n\r\n      {/* popup Обновить аватар */}\r\n      <PopupWithForm\r\n        title=\"Обновить аватар\"\r\n        name=\"avatar\"\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        children={\r\n          <form className=\"popup__form popup__form_avatar\" name=\"new_avatar\">\r\n            <div className=\"input-container\">\r\n              <input\r\n                required\r\n                type=\"url\"\r\n                name=\"avatar\"\r\n                className=\"popup__input popup__input_type_link-url\"\r\n                placeholder=\"Ссылка на аватар\"\r\n              />\r\n              <span className=\"input__error\"></span>\r\n            </div>\r\n            <button className=\"button popup__button_save_new_info\">\r\n              Сохранить\r\n            </button>\r\n          </form>\r\n        } />\r\n\r\n      {/* popup Открытие попапа с картинкой */}\r\n      <ImagePopup\r\n        name={selectedCard.name}\r\n        link={selectedCard.link}\r\n        onClose={closeAllPopups}\r\n        isOpen={selectedCard.isImageOpen}\r\n        closeImagePopupClickOutContent={closeImagePopupClickOutContent}\r\n      />\r\n      <Footer />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}